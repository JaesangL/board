spring.application.name=board
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# DATABASE (데이터베이스 설정)
	# PostgreSQL용 JDBC 드라이버 클래스 지정
	spring.datasource.driver-class-name=org.postgresql.Driver
	# 데이터베이스 URL (호스트명, 포트, 데이터베이스 이름 포함)
	spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/test
	# PostgreSQL 데이터베이스 접속을 위한 사용자 이름
	spring.datasource.username=JaesangLee
	# PostgreSQL 데이터베이스 접속을 위한 비밀번호
	spring.datasource.password=1234

# JPA (Java Persistence API 설정)
	# Hibernate가 생성하는 SQL 문을 로그에 출력하도록 설정
	spring.jpa.show-sql=true
	# 데이터베이스 스키마 생성 전략 지정 ('create'는 시작 시 스키마를 삭제하고 다시 생성)
		# none : 아무것도 실행하지 않음 (기본값)
		# create : DB Session Factory 연결 시 drop 실행 후 create 
		# create-drop : DB session factory 연결 시 drop 실행 후 create,  DB Session Factory 종료 시 drop
		# update : 변경된 스키마 부분만 수정하여 반영
		# validate : 변경된 스키마 부분 검증하여 출력, 변경된 부분이 있으면 서버 구동 종료
	spring.jpa.hibernate.ddl-auto=update
	# SQL 문을 보기 쉽게 포맷팅하여 출력하도록 설정
	spring.jpa.properties.hibernate.format_sql=true
	# JDBC LOB (Large Object) 생성 시 Hibernate가 컨텍스트 없이 생성하도록 설정
	spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true